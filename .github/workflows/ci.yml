name: ECS Continuous Integration
run-name: ${{ github.actor }} is running Continuous Integration on GitHub Actions ðŸš€
on: [push]
env:
  ECR_ENDPOINT: 255945442255.dkr.ecr.us-east-1.amazonaws.com
jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install

  code-unit-testing:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run installation of dependencies commands
        run: npm install
      - name: Run unit testing command
        run: npm test

  code-vulnerability-scanning:
    runs-on: ubuntu-latest
    needs: install-dependencies
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Run vulernability scan
        run: |
          echo "To do"
          echo "Add scanning"

  build-and-scan-image:
    runs-on: ubuntu-latest
    needs: [code-unit-testing, code-vulnerability-scanning]
    #add this to use env secret/var
    #     environment:
    #       name: dev
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to ECR
        run: aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ env.ECR_ENDPOINT }}
      - name: Docker build and tag
        run: |
          docker build -t ${{ vars.IMAGE_NAME }} .
          docker tag ${{ vars.IMAGE_NAME }}:latest ${{ env.ECR_ENDPOINT }}/${{ vars.IMAGE_NAME }}:latest
      - name: Run image scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: "${{ vars.IMAGE_NAME }}:latest"
          format: "table"
          # exit-code: '1'
          exit-code: "0"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "MEDIUM,HIGH,CRITICAL"
      - name: Docker publish to ECR
        run: docker push ${{ env.ECR_ENDPOINT }}/${{ vars.IMAGE_NAME }}:latest

  deploy-image-dev:
    needs: [build-and-scan-image]
    name: "Deployed image to dev"
    uses: jcyk94/container-cicd/.github/workflows/cd.yml@main
    with:
      target_env: "dev"
      action: "deploy"
    secrets: inherit
    if:
      ${{ github.ref_name == 'main' || github.ref_name == 'develop' || startsWith(github.ref_name, 'feature/') }}
      //try to remove main and see if it works
      //remove @main see if it works, is there default?
      //how to read var/secret from env?

  deploy-image-uat:
    needs: [build-and-scan-image]
    name: "Deployed image to uat"
    uses: jcyk94/container-cicd/.github/workflows/cd.yml@main
    with:
      target_env: "uat"
      action: "deploy"
    secrets: inherit
    if: ${{ startsWith(github.ref_name, 'release/') }}

  deploy-image-prod:
    needs: [build-and-scan-image, deploy-image-uat]
    name: "Deployed image to prod"
    uses: jcyk94/container-cicd/.github/workflows/cd.yml@main
    with:
      target_env: "prod"
      action: "deploy"
    secrets: inherit
    if: ${{ startsWith(github.ref_name, 'release/') }}
